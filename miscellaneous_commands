# Miscellaneous commands I've been using since for file editing.


1. sed -e 's/,/\t/g'  --> Change comma separation to TAB

2. column -t filename  -->  Separate a file by columns

3. cut -d$'\t' -f 1-10 NAMEOFFILE.txt > NAMEOFFILE2.txt -->  Cut the first 10 columns of a file 

4. sed '1h;1d;$!H;$!d;G' nameoffile --> makes the last line the header

5. sed -e "s/^M//" filename > newfilename --> remove ^M from files edited on Windows and uploaded to Linux. 
OBS: To enter ^M, type CTRL-V, then CTRL-M. That is, hold down the CTRL key then press V and M in succession.

6. sed 's/^.....//'  input>output --> remove the first 5 characters from any line in a file

7. sed 's/.$//' --> remove last character from any line in a file

8. sed 's/ /\t/g' input>output  Change space separation to TAB

9.  awk '{print NF}' input>output --> count columns

10. cat HEADERCFILE FILEWITHNOHEADER > output --> Join the header file with the data file, one under the other

11. sort -k1 input > output --> sort file by the 1st column

12. awk '{print $2,$1,$3}' input>output --> Creating a new file with columns 2, 1 and 3 from another file

13. paste input1 input2 > output --> Join two files into a new file just by pasting one next to the other

14. less -S nameoffile --> Open a very large file on linux

15. sed 1d input > output --> cut the first line of a file

16. cut -‐f1 -‐d" " input>output --> cut the first column of a file

17. cut -d " " -f 2- input>output --> cut the first column and create a new file from the second column to the last.

18. awk 'FNR>=1 && FNR<=11' input>output --> Take only the first 11 lines of a file

19. echo "$(tail -n +2 input)" > output --> remove header

20.  nohup ./command_that_will_take_forever_to_complete & --> run a command that will take a while to complete without stopping in a server

21. grep -vwF -f id1.txt id2.txt > id3.txt --> (This file contains the animals that are not in common... that is, animals that have a phenotype)

OBS: print strings that are not common when comparing two different files. the output will be all the different values/animals/sentences between the two files. In the example above, I wanted to know which animals had phenotype and not genotype (the number of animals genotyped was lower). I just wanted to work with phenotyped animals that had a genotype, that is, to exclude individuals without genomic information.

22. join  -1 1 -2 1 <(sort -k1 input1) <(sort -k1 input2) > output --> join files by column

23. chmod u+x nameofexecutable -->  change file permissions

24. awk '{print $0, "Fernando"}' input>output --> add a column named fernando (fernando all the way down the file)

25. wc -l nameoffile --> count lines in a file

26. awk '{if($9>=1.0)print;}' input> output --> choose rows above a given value in the 9th column

27. grep 'gyr' file1 --> prints lines from a file that contains a pattern.

28. head -n nameoffile --> returns the first lines of the file

29.  tail -n nameoffile --> return the last lines of the file



